plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.dodo'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    // cloud sql 배포용
    implementation 'com.google.cloud.sql:postgres-socket-factory:1.12.0'
    // querydsl for spring boot 3.x
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // Spring Cloud Google Cloud 사용
    implementation 'com.google.cloud:spring-cloud-gcp-starter:4.8.3'
    implementation 'com.google.cloud:spring-cloud-gcp-starter-storage:4.8.3'
    // Hibernate Spatial - PostGIS 지원
    implementation 'org.hibernate:hibernate-spatial:6.5.0.Final'
    // PostGIS JDBC 드라이버
    implementation 'net.postgis:postgis-jdbc:2.5.0'
    // CoolSms
    implementation 'net.nurigo:sdk:4.3.2'
    // postgis 의 JTS 지리 타입 변환
    implementation 'org.n52.jackson:jackson-datatype-jts:1.2.10'
    // SpringDoc OpenAPI (Swagger 3)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'

}

tasks.named('test') {
    useJUnitPlatform()

    // 직접 실행 (forking 없음)
    systemProperty 'file.encoding', 'UTF-8'

    // 사용자 정의 JVM 옵션
    jvmArgs '-XX:+EnableDynamicAgentLoading'
}